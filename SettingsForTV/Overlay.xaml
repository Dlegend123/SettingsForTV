<Window x:Class="SettingsForTV.Overlay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Overlay" MaxHeight="150" MaxWidth="150"
        TextOptions.TextFormattingMode="Display" WindowStyle="None" MouseDown="Window_MouseDown"
        Background="Transparent"
        AllowsTransparency="True" Deactivated="Window_Deactivated" Height="92" Width="89" Activated="Overlay_OnActivated">
    <Window.Resources>
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#FF795850" CornerRadius="2"
                                BorderBrush="Black" BorderThickness="2"
                                Opacity="0.96">
                            <StackPanel ClipToBounds="True" Orientation="Vertical"
                                        IsItemsHost="True" Margin="5,4,5,4" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto"
                                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuTextColumnGroup" />
                                    <ColumnDefinition Width="Auto"
                                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                                    <ColumnDefinition x:Name="Col3" Width="14" />
                                </Grid.ColumnDefinitions>

                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon"
                                                  VerticalAlignment="Center" ContentSource="Icon" />

                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0"
                                      x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center"
                                          Fill="{TemplateBinding Foreground}"
                                          Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                          FlowDirection="LeftToRight" />
                                </Grid>

                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  x:Name="HeaderHost"
                                                  RecognizesAccessKey="True"
                                                  ContentSource="Header" />

                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2"
                                                  Margin="8,1,8,1"
                                                  x:Name="IGTHost"
                                                  ContentSource="InputGestureText"
                                                  VerticalAlignment="Center" />

                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel"
                                      VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                                </Grid>

                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup Grid.Column="0" x:Name="SubMenuPopup" AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                       Placement="Right">
                                    <Border x:Name="SubMenuBorder">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True"
                                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1" />
                                <Setter Property="MinWidth" Value="0" TargetName="Col0" />
                                <Setter Property="Width" Value="Auto" TargetName="Col3" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>

                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>

                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                            </Trigger>

                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="None"
                                        TargetName="SubMenuPopup" />
                            </Trigger>

                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                            </Trigger>

                            <!-- The GlyphPanel contains the CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                            </Trigger>

                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="#FF795850" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="false">
                                <Setter Property="Background" Value="#FF795850" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="Black" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <DropShadowEffect />
    </Window.Effect>

    <Grid UseLayoutRounding="True" Background="Transparent">
        <Border CornerRadius="20" BorderThickness="2" HorizontalAlignment="Center"
                VerticalAlignment="Center" BorderBrush="White">
            <Border.Background>
                <SolidColorBrush Color="#FF795850" />
            </Border.Background>
            <Border.ContextMenu>
                <ContextMenu Foreground="White" FontWeight="Bold">

                    <MenuItem Header="_Settings" Name="OpenSettings" Click="OpenSettings_Click"/>
                    <Separator />
                    <MenuItem Header="_Manage Windows">
                        <MenuItem Header="_Show All Windows" Name="ShowAllWindows" Click="ShowAllWindows_Click" />
                        <MenuItem Header="_Change Window Positons" />

                    </MenuItem>
                </ContextMenu>
            </Border.ContextMenu>
            <Border Name="Mask"
                    BorderBrush="#FF795850"
                    BorderThickness="10"
                    CornerRadius="20" UseLayoutRounding="True">
                <Border.Background>
                    <SolidColorBrush Color="Black" />
                </Border.Background>
                <Border
                    BorderBrush="White"
                    BorderThickness="2"
                    CornerRadius="10" UseLayoutRounding="True">
                    <Border.Background>
                        <SolidColorBrush Color="#FF795850" />
                    </Border.Background>
                    <Border
                        Background="Black"
                        BorderThickness="10"
                        CornerRadius="4" UseLayoutRounding="True">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Black" />
                        </Border.BorderBrush>
                        <Border
                            BorderBrush="White"
                            BorderThickness="2"
                            CornerRadius="5" UseLayoutRounding="True">
                            <Border.Background>
                                <SolidColorBrush Color="#FF795850" Opacity="0.5" />
                            </Border.Background>
                            <Border
                                Background="Transparent"
                                BorderThickness="10"
                                CornerRadius="1">
                                <Border.Effect>
                                    <DropShadowEffect />
                                </Border.Effect>
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#FF795850" Opacity="0.4" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                    </Border>
                </Border>
            </Border>
        </Border>

    </Grid>


</Window>